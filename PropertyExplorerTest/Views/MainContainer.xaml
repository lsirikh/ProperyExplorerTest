<UserControl
    x:Class="PropertyExplorerTest.Views.MainContainer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:behaviors="clr-namespace:PropertyExplorerTest.Behaviors"
    xmlns:viewModels="clr-namespace:PropertyExplorerTest.ViewModels"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    mc:Ignorable="d"
    d:DesignHeight="850"
    d:DesignWidth="1200"
    >

    <UserControl.Resources>
        <Storyboard x:Key="ShowProperty">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)"
                                           >
                <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <!-- UserControl DataContext 설정 -->
    <UserControl.DataContext>
        <!--
            내부에서 viewModels를 직접 참조하는 것은 MVVM 패턴에 적합하지
            않다고 한다.
        -->
        <viewModels:MainContainerViewModel />
    </UserControl.DataContext>
    

    <!-- UserControl Layout 구성 -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Border
                x:Name="backBorder"
                BorderThickness="0"
                BorderBrush="Transparent"
                CornerRadius="10"
                Margin="10"
                Width="1024"
                Height="768"
                >
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" x:Name="BorderBackground" Value="#FF172131"/>
                    </Style>
                </Border.Style>
                <ListBox x:Name ="CanvasListBox"
                    Background="Transparent"
                    ItemsSource="{Binding Items}"
                    SelectionMode="Extended"
                    SelectedItem="{Binding SelectedShape, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="5"
                    Tag="{Binding}"
                    >

                    <!-- ListBox ContextMenu 파트 시작 -->
                    <ListBox.ContextMenu>
                        <ContextMenu 
                            DataContext="{Binding Path=PlacementTarget.Tag, 
                            RelativeSource={RelativeSource Self}, 
                            UpdateSourceTrigger=PropertyChanged}"
                            >
                            <ContextMenu.Tag>
                                <Binding
                                    Path="DataContext"
                                    RelativeSource="{RelativeSource Self}"
                                    UpdateSourceTrigger="PropertyChanged"
                                    />
                            </ContextMenu.Tag>
                            <!--새로운 메뉴를 추가합니다.-->
                            <!--MainContainerViewModel.cs에 있는 CreateCircleCommand와
                            연동을 하고, 파라미터로 마우스클릭 위치를 전송하는 것입니다.-->
                            <MenuItem
                                x:Name="AddCircle"
                                Header="Add _Circle"
                                >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <cmd:EventToCommand 
                                            Command="{Binding Path=DataContext.CreateCircleCommand, Mode=OneWay,
                                            RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                            PassEventArgsToCommand="True"
                                            />  
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </MenuItem>
                            <MenuItem
                                x:Name="Property" Header="Property"
                                >
                                <MenuItem.Command>
                                    <Binding
                                        Path="DataContext.SelectModelCommand"
                                        RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"
                                        />
                                </MenuItem.Command>
                                <MenuItem.CommandParameter>
                                    <!-- I don'y know either why can not access by DataContext. -->
                                    <Binding
                                        Path="Tag.SelectedShape"
                                        Mode="TwoWay"
                                        RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"
                                        />
                                </MenuItem.CommandParameter>
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <!-- ListBox ContextMenu 파트 끝 -->
                    
                    <!-- ListBox ItemPanel 파트 시작-->
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas
                                ClipToBounds="True"
                                SnapsToDevicePixels="True"
                                Margin="5" 
                                >
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <!-- ListBox ItemPanel 파트 끝-->
                    
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisual}"/>
                            <Setter Property="Canvas.Left" Value="{Binding X.Value}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y.Value}" />
                            <Setter Property="Panel.ZIndex" Value="{Binding ZLevel.Value}" />
                            <Setter Property="behaviors:InCanvasMovingBehavior.PanningTarget" Value="{Binding RelativeSource={RelativeSource Self}}" />
                            <Setter Property="behaviors:InCanvasMovingBehavior.X" Value="{Binding X.Value}" />
                            <Setter Property="behaviors:InCanvasMovingBehavior.Y" Value="{Binding Y.Value}" />
                            <Setter Property="behaviors:InCanvasMovingBehavior.ZLevel" Value="{Binding ZLevel.Value}" />
                            <Setter Property="behaviors:InCanvasMovingBehavior.Captured" Value="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" BorderThickness="0" >
                                            <Border.Background>
                                                <SolidColorBrush Color="Transparent" />
                                            </Border.Background>
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="2.0 2.0"
                                                                   x:Name="RectBorder"
                                                                   Stroke="Transparent"
                                                                   StrokeThickness="1"
                                                                   RadiusX="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.TopRight}"
                                                                   RadiusY="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=CornerRadius.BottomLeft}"
                                                                   Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                                   Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>         
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonState">
                                                    <VisualState x:Name="Normal">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames 
                                                                Storyboard.TargetName="RectBorder"
                                                                Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                    Value="Transparent" />
                                                            </ColorAnimationUsingKeyFrames>

                                                            <ThicknessAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="BorderThickness"
                                                                Duration="0:0:0.1" FillBehavior="HoldEnd" >

                                                                <SplineThicknessKeyFrame KeyTime="0">
                                                                    <SplineThicknessKeyFrame.Value>
                                                                        <Thickness Left="1" Right="1" Top="1" Bottom="1" />
                                                                    </SplineThicknessKeyFrame.Value>
                                                                </SplineThicknessKeyFrame>

                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames 
                                                                Storyboard.TargetName="RectBorder"
                                                                Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                    Value="Red" />
                                                            </ColorAnimationUsingKeyFrames>
                                                            
                                                            <ThicknessAnimationUsingKeyFrames
                                                                Storyboard.TargetProperty="BorderThickness"
                                                                Duration="0:0:0.1" FillBehavior="HoldEnd" >
                                                                
                                                                <SplineThicknessKeyFrame KeyTime="0:0:0.1">
                                                                    <SplineThicknessKeyFrame.Value>
                                                                        <Thickness Left="1" Right="1" Top="1" Bottom="1" />
                                                                    </SplineThicknessKeyFrame.Value>
                                                                </SplineThicknessKeyFrame>
                                                                
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="SelectionStates">
                                                    <VisualState x:Name="Unselected" />
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                    Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                    Value="{StaticResource SelectedItemColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="SelectedUnfocused">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                <EasingColorKeyFrame KeyTime="0"
                                                                Value="{StaticResource SelectedUnfocusedColor}" />
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        
                    </ItemsControl.ItemContainerStyle>
                        
                </ListBox>
            </Border>
        </Grid>

        <!-- Splitter 파트 시작 -->
        <GridSplitter
            Grid.Column="0"
            ShowsPreview="True"
            Width="2"
            Background="#FF9C9C9C"
            />
        <!-- Splitter 파트 종료 -->

        <!-- Property Window 파트 시작-->
        <Grid 
            x:Name="PropertyWindow"
            Grid.Column="1" 
            Width="300"
            Visibility="{Binding IsPropertyShow, 
            Converter={StaticResource BooleanToVisibilityConverter}}"
            >
            <ContentControl Content="{Binding PropertyExplorer}" />
        </Grid>
        <!-- Property Window 파트 종료-->
    </Grid>
</UserControl>
