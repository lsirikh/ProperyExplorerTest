<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:PropertyExplorerTest.ViewModels"
    xmlns:views="clr-namespace:PropertyExplorerTest.Views"
    xmlns:converters="clr-namespace:PropertyExplorerTest.Converters"
    xmlns:shapes="clr-namespace:PropertyExplorerTest.ViewModels.Shapes"
    xmlns:control="clr-namespace:PropertyExplorerTest.Controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:model="clr-namespace:PropertyExplorerTest.Models"
    xmlns:propertyModels="clr-namespace:PropertyExplorerTest.Models.PropertyModels"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:ColorToSolidBrushConverter x:Key="BrushConverter" />

    <!--<DataTemplate DataType="{x:Type shapes:RectViewModel}">
        <control:MoveThumb X="{Binding X.Value}" Y="{Binding Y.Value}">
            <control:MoveThumb.Template>
                <ControlTemplate>
                    <StackPanel>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl},
                                    Mode=FindAncestor}, Path=DataContext.SelectModelCommand}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                            <StackPanel>
                                <Label Content="{Binding Path=Name.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Foreground="White" FontSize="15" FontWeight="Bold"/>
                                <Rectangle Height="30" Width="30"
                                Fill="{Binding Path=FillColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                RadiusX="3" RadiusY="3">
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="1" Direction="-45" Opacity="1" ShadowDepth="5"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <TextBlock Text="{Binding Path=X.Value, StringFormat={}X:{0:0.##}}" Foreground="Yellow" FontSize="10" FontWeight="Bold" />
                                <TextBlock Text="{Binding Path=Y.Value, StringFormat={}Y:{0:0.##}}" Foreground="Yellow" FontSize="10" FontWeight="Bold" />
                            </StackPanel>

                    </StackPanel>
                </ControlTemplate>
            </control:MoveThumb.Template>
        </control:MoveThumb>

    </DataTemplate>-->

    <!--
    <DataTemplate DataType="{x:Type shapes:RectViewModel}">
        <control:MoveThumb>
            <control:MoveThumb.Template>
                <ControlTemplate>
                    <Grid Margin="10,2" HorizontalAlignment="Center">
                        <RadioButton Command="{Binding Path=DataContext.SelectModelCommand,
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                         CommandParameter="{Binding}" GroupName="ModelSelector" Style="{StaticResource SelectorStyle}">

                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Rectangle Width="{Binding Path=Width.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Height="{Binding Path=Height.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Fill="{Binding Path=FillColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                               Stroke="{Binding Path=BorderColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                               StrokeThickness="{Binding Path=BorderThickness.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               ToolTip="{Binding Path=ToolTip.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               RadiusX="{Binding Path=RadiusX.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               RadiusY="{Binding Path=RadiusY.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="{Binding Path=X.Value, StringFormat={}X:{0:0.##}}" Foreground="Yellow" FontSize="10" FontWeight="Bold" />
                                <TextBlock Text="{Binding Path=Y.Value, StringFormat={}Y:{0:0.##}}" Foreground="Yellow" FontSize="10" FontWeight="Bold" />
                            </StackPanel>
                        </RadioButton>
                    </Grid>
                </ControlTemplate>

            </control:MoveThumb.Template>
        </control:MoveThumb>

    </DataTemplate>
    -->

    <!--<DataTemplate DataType="{x:Type shapes:EllipseViewModel}">
        <control:MoveThumb
            X="{Binding X.Value}"
            Y="{Binding Y.Value}"
            >
            <control:MoveThumb.Template>
                <ControlTemplate>
                    <StackPanel
                        Margin="10 2"
                        HorizontalAlignment="Center"
                        >
    -->
    <!--
        RadioButton Command를 통한 모델 선택 기능 수행
        RelativeSource로 UserControl 타입의 상위 Element를 찾는다.
        Parameter는 Model이 바인딩 될텐데 어떻게 바인딩 되는거지?
        
        https://stackoverflow.com/questions/84278/how-do-i-use-wpf-bindings-with-relativesource
        그림 참조(https://i.stack.imgur.com/6Tcc6.jpg)
    -->
    <!--
                        <CheckBox
                            Command="{Binding Path=DataContext.SelectModelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding}"
                            >
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Ellipse
                                    Width="{Binding Path=Width.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Height="{Binding Path=Height.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Fill="{Binding Path=FillColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                    Stroke="{Binding Path=BorderColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                    StrokeThickness="{Binding Path=BorderThickness.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="{Binding Path=ToolTip.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    >

                                </Ellipse>
                                <TextBlock
                                    Text="{Binding Path=X.Value, StringFormat={}X:{0:0.##}}"
                                    Foreground="Yellow"
                                    FontSize="10"
                                    FontWeight="Bold"
                                    />
                                <TextBlock
                                    Text="{Binding Path=Y.Value, StringFormat={}Y:{0:0.##}}"
                                    Foreground="Yellow"
                                    FontSize="10"
                                    FontWeight="Bold"
                                    />
                            </StackPanel>
                        </CheckBox>

                    </StackPanel>
                </ControlTemplate>
            </control:MoveThumb.Template>
        </control:MoveThumb>

    </DataTemplate>

    <DataTemplate DataType="{x:Type shapes:LineViewModel}">
        <control:MoveThumb>
            <control:MoveThumb.Template>
                <ControlTemplate>
                    <Grid
                        Margin="10 2"
                        HorizontalAlignment="Center"
                        >
                        <CheckBox
                            Command="{Binding Path=DataContext.SelectModelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            CommandParameter="{Binding}"
                            Style="{StaticResource SelectorStyle}"
                            >
                            <StackPanel>
                                <TextBlock Text="{Binding Path=Name.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Line
                                    Width="{Binding Path=Width.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Height="{Binding Path=Height.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Fill="{Binding Path=FillColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                    Stroke="{Binding Path=BorderColor.Value, Converter={StaticResource BrushConverter}, Mode=TwoWay}"
                                    StrokeThickness="{Binding Path=BorderThickness.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="{Binding Path=ToolTip.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    X1="{Binding Path=X1.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    X2="{Binding Path=X2.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Y1="{Binding Path=Y1.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Y2="{Binding Path=Y2.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                <TextBlock
                                    Text="{Binding Path=X.Value, StringFormat={}X:{0:0.##}}"
                                    Foreground="Yellow"
                                    FontSize="10"
                                    FontWeight="Bold"
                                    />
                                <TextBlock
                                    Text="{Binding Path=Y.Value, StringFormat={}Y:{0:0.##}}"
                                    Foreground="Yellow"
                                    FontSize="10"
                                    FontWeight="Bold"
                                    />
                            </StackPanel>
                        </CheckBox>
                    </Grid>
                </ControlTemplate>
            </control:MoveThumb.Template>
        </control:MoveThumb>
    </DataTemplate>-->

    <DataTemplate DataType="{x:Type vm:PropertyExplorerViewModel}">
        <views:PropertyExplorer />
    </DataTemplate>

    <DataTemplate DataType="{x:Type propertyModels:PropertyCategory}">
        <Grid>
            <Expander
                Header="{Binding CategoryName}"
                Visibility="{Binding IsShow, Converter={StaticResource BooleanToVisibilityConverter}}"
                IsExpanded="True"
                >
                <ItemsControl ItemsSource="{Binding Properties}" />
            </Expander>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type propertyModels:PropertyContainer}">
        <Grid Visibility="{Binding IsShow, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <TextBlock 
                Grid.Column="0"
                Text="{Binding PropertyName}" />
            <Grid Grid.Column="1">
                <ContentControl Content="{Binding Property}" />
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type propertyModels:DoublePropertySet}">
        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type propertyModels:IntPropertySet}">
        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type propertyModels:StringPropertySet}">
        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type propertyModels:ColorPropertySet}">
        <xctk:ColorPicker SelectedColor="{Binding Value, UpdateSourceTrigger=PropertyChanged, 
            Converter={StaticResource BooleanToVisibilityConverter}}" />
    </DataTemplate>

</ResourceDictionary>